openapi: 3.0.3
info:
  title: Liturgy.day
  #summary: A REST API for Liturgical queries
  description: |
    ## A REST API for Liturgical queries

    This API is provided to aid Catholic developers who need to adjust their application logic based on the Liturgical Calendar.

    ---

    ## About the Liturgy

    ### Liturgical Seasons

    #### Advent

    Advent begins four Sundays before Christmas and ends on Christmas.

    The Liturgical color for Advent is **<span style="padding:1px 5px 4px;background:#4c1a57;color:#fff;">purple</span>**, except on Gaudete Sunday (3rd Sunday of Advent) when it is **<span style="padding:1px 5px 4px;background:#dc7f9b;color:#fff;">rose</span>**.

    The beginning of Advent also signifies the beginning of a new liturgical year.

    #### Christmas

    Christmas begins on Christmas day and ends on the Feast of the Baptism of Jesus.

    The Liturgical color for Christmas is **<span style="padding:1px 5px 4px;color:#000;background:#eef0f2;">white</span>**.

    Pope Paul VI set the feast day for the Baptism of Jesus as the first Sunday after January 6 (as early as January 7 or as late as January 13) or - if in the Epiphany is celebrated on Sunday January 7 or Sunday January 8 - on Monday January 8 or Monday January 9.

    #### Lent

    Lent begins on Ash Wednesday and ends on Holy Saturday.

    The Liturgical color for Lent is **<span style="padding:1px 5px 4px;background:#4c1a57;color:#fff;">purple</span>**, except on:

    - Laetare Sunday (4th Sunday of Lent) when it it **<span style="padding:1px 5px 4px;background:#dc7f9b;color:#fff;">rose</span>**.
    - Palm Sunday and Good Friday when it is **<span style="padding:1px 5px 4px;background:#d73337;color:#fff;">red</span>**.

    #### Easter

    Easter is the most important liturgical season for the Church. The season begins on Easter Sunday and lasts until Pentecost.

    The Liturgical color for Easter is **<span style="padding:1px 5px 4px;color:#000;background:#eef0f2;">white</span>**, except on Pentecost when it is **<span style="padding:1px 5px 4px;background:#d73337;color:#fff;">red</span>**.

    Pentecost also marks the birthday of the Church.

    #### Ordinary Time

    Ordinary time is all time from Christmas to Lent and Pentecost to Advent.

    The Liturgical color for Ordinary Time is **<span style="padding:1px 5px 4px;background:#519872;color:#fff;">green</span>**.

    ---

    ### Liturgical Cycles

    #### Sunday Cycles

    There are three Sunday cycles: `A`, `B`, and `C`. The cycle determines which Bible readings are included in Sunday Masses.

    #### Weekday Cycles

    There are just two weekday cycles: `I` and `II`. The cycle determines which Bible readings are included in weekday Masses. The weekday cycle does not apply to Advent, Christmas, Lent, or Easter, as the weekday readings are always the same.

    #### Liturgy of the Hours

    The Liturgy of the Hours is divided into four volumes: `I`, `II`, `III`, and `IV`.

    - Volume I: Advent and Christmas
    - Volume II: Lent, Triduum, and Easter
    - Volume III: Ordinary Time weeks 1 to 17
    - Volume IV: Ordinary Time weeks 18 to 34

    #### Rosary Series

    There are four series of Rosary mysteries that are prayed on certain days of the week, depending on the Liturgical Season.

    - Glorious mysteries
    - Joyful mysteries
    - Luminous mysteries
    - Sorrowful mysteries

    The days of the week for each series are as follows.

    | Day       | Ordinary Time, Easter | Advent, Christmas | Lent      |
    | --------- | --------------------- | ----------------- | --------- |
    | Sunday    | Glorious              | Joyful            | Sorrowful |
    | Monday    | Joyful                | Joyful            | Joyful    |
    | Tuesday   | Sorrowful             | Sorrowful         | Sorrowful |
    | Wednesday | Glorious              | Glorious          | Glorious  |
    | Thurday   | Luminous              | Luminous          | Luminous  |
    | Friday    | Sorrowful             | Sorrowful         | Sorrowful |
    | Saturday  | Joyful                | Joyful            | Joyful    |

    ---

  version: 0.9.0
  contact:
    name: Andrew Ensley
    url: https://github.com/aensley/liturgy-day/issues/new/choose
  license:
    name: MIT
    url: https://github.com/aensley/liturgy-day/blob/main/LICENSE
  x-logo:
    url: 'logo.svg'
    backgroundColor: '#FFFFFF'
    altText: 'Liturgy.day Logo'
servers:
  - url: https://liturgy.day/api
paths:
  /day:
    get:
      summary: day
      description: |
        For the given or current date, get the Liturgical season, Sunday cycle, Weekday cycle, Liturgy of the Hours volume, and Rosary series.

        The date can be provided as a Unix **timestamp** (preferred) or **date** string in `YYYY-MM-DD` format.
      parameters:
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/timestamp'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse'
        '400':
          description: The provided parameters are incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: A server error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                error: A server error has occurred
                event-id: api-123456
      x-code-samples:
        - lang: shell
          label: 'CLI'
          source: |
            curl --request GET \
              --url 'https://liturgy.day/api/day?date=2023-01-09' \
              --header 'Content-Type: application/json'
        - lang: javascript
          label: 'Node.js'
          source: |
            const fetch = require('node-fetch');
            fetch('https://liturgy.day/api/day?date=2023-01-09', {
              method: 'GET',
              headers: { 'Content-Type': 'application/json' }
            })
              .then((response) => response.json())
              .then((response) => console.log(response))
              .catch((err) => console.error(err))
        - lang: javascript
          label: 'JavaScript'
          source: |
            fetch('https://liturgy.day/api/day?date=2023-01-09', {
              method: 'GET',
              headers: { 'Content-Type': 'application/json' }
            })
              .then((response) => response.json())
              .then((response) => console.log(response))
              .catch((err) => console.error(err))
        - lang: java
          label: Java
          source: |
            HttpResponse<String> response = Unirest.get("https://liturgy.day/api/day?date=2023-01-09")
              .header("Content-Type", "application/json")
              .asString();
        - lang: swift
          label: Swift
          source: |
            import Foundation
            let headers = ["Content-Type": "application/json"]
            let request = NSMutableURLRequest(url: NSURL(string: "https://liturgy.day/api/day?date=2023-01-09")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()
        - lang: python
          label: Python
          source: |
            import requests
            url = "https://liturgy.day/api/day?date=2023-01-09"
            headers = {"Content-Type": "application/json"}
            response = requests.request("GET", url, headers=headers)
            print(response.text)
        - lang: csharp
          label: C#
          source: |
            var client = new RestClient("https://liturgy.day/api/day?date=2023-01-09");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Content-Type", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: go
          label: Go
          source: |
            package main
            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {
              url := "https://liturgy.day/api/day?date=2023-01-09"
              req, _ := http.NewRequest("GET", url, nil)
              req.Header.Add("Content-Type", "application/json")
              res, _ := http.DefaultClient.Do(req)
              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)
              fmt.Println(res)
              fmt.Println(string(body))
            }
        - lang: php
          label: PHP
          source: |
            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://liturgy.day/api/day?date=2023-01-09');
            $request->setRequestMethod('GET');
            $request->setHeaders([ 'Content-Type' => 'application/json' ]);

            $client->enqueue($request)->send();
            $response = $client->getResponse();
            echo $response->getBody();
        - lang: ruby
          label: Ruby
          source: |
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://liturgy.day/api/day?date=2023-01-09")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Content-Type"] = 'application/json'

            response = http.request(request)
            puts response.read_body
        - lang: powershell
          label: PowerShell
          source: |
            $headers=@{}
            $headers.Add("Content-Type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://liturgy.day/api/day?date=2023-01-09' -Method GET -Headers $headers
components:
  parameters:
    date:
      name: date
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/date'
    timestamp:
      name: timestamp
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/timestamp'
  schemas:
    errorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/errorMessage'
        event-id:
          $ref: '#/components/schemas/event-id'
    dayResponse:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/timestamp'
        season:
          $ref: '#/components/schemas/season'
        sunday-cycle:
          $ref: '#/components/schemas/sunday-cycle'
        weekday-cycle:
          $ref: '#/components/schemas/weekday-cycle'
        loth-volume:
          $ref: '#/components/schemas/loth-volume'
        rosary-series:
          $ref: '#/components/schemas/rosary-series'
    errorMessage:
      type: string
      maxLength: 256
      description: A text message describing an error.
      example: Date is too far in the past
    event-id:
      type: string
      maxLength: 256
      description: An identifier for a specific even that can be used to trace errors or performance issues
      example: api-123456
    date:
      type: string
      minLength: 10
      maxLength: 10
      format: date
      pattern: '^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$'
      example: '2023-01-09'
    timestamp:
      type: integer
      minimum: 1638057600 # First record available in data.
      maximum: 1703462400 # Last record available in data.
      example: 1673222400 # 2023-01-09
    day-of-week:
      type: string
      enum: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
      description: Day of the week.
      example: Monday
    days-of-week:
      type: array
      maxItems: 3
      minItems: 1
      items:
        $ref: '#/components/schemas/day-of-week'
    season:
      type: string
      enum: ['Advent', 'Christmas', 'Lent', 'Easter', 'OrdinaryTime']
      description: The Liturgical Season.
      example: 'OrdinaryTime'
    sunday-cycle:
      type: string
      enum: ['A', 'B', 'C']
      description: The cycle year for Sunday readings.
      example: A
    weekday-cycle:
      type: string
      enum: ['I', 'II', 'Season']
      description: |
        The cycle year for weekday readings.
        Does not apply to Advent, Christmas, Lent, or Easter.
        For these seasons, the weekday cycle is always "Season."
      example: I
    loth-volume:
      type: string
      enum: ['I', 'II', 'III', 'IV']
      description: The volume for Liturgy of the Hours.
      example: III
    rosary-series:
      type: string
      enum: ['Glorious', 'Joyful', 'Luminous', 'Sorrowful']
      description: The series of mysteries for the rosary.
      example: Joyful
    rosary-days:
      type: object
      properties:
        Glorious:
          $ref: '#/components/schemas/days-of-week'
        Joyful:
          $ref: '#/components/schemas/days-of-week'
        Luminous:
          $ref: '#/components/schemas/days-of-week'
        Sorrowful:
          $ref: '#/components/schemas/days-of-week'
    rosary-week:
      type: object
      properties:
        Sunday:
          $ref: '#/components/schemas/rosary-series'
        Monday:
          $ref: '#/components/schemas/rosary-series'
        Tuesday:
          $ref: '#/components/schemas/rosary-series'
        Wednesday:
          $ref: '#/components/schemas/rosary-series'
        Thursday:
          $ref: '#/components/schemas/rosary-series'
        Friday:
          $ref: '#/components/schemas/rosary-series'
        Saturday:
          $ref: '#/components/schemas/rosary-series'
